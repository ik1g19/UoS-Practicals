<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://ik1g19.github.io/UoS-Notes/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ik1g19.github.io/UoS-Notes/notes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Advanced-Databases-ToC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Advanced-Databases-ToC/</guid><description>[[Week 1]] [[Week 2]] [[Week 3]] [[Week 4]] [[Week 5]] [[Week 6]] [[Week 7]] [[Week 8]] [[Week 9]]</description></item><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Computer-Vision-ToC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Computer-Vision-ToC/</guid><description>[[notes/Computer Vision/Introduction|Introduction]] [[Eye and Human Vision]] [[Image Formation]] [[Image Sampling]] [[Point Operators]] [[Edge Detection]] [[Further Edge Detection]] [[Finding Shapes]] [[Finding More Shapes]] [[Building Machines that See]] [[Machine Learning for Pattern Recognition]] [[Covariance and Prinicpal Components]] [[Local Interest Points]] [[Local Features and Matching]] [[Consistent Matching]] [[Large Scale Image Search]] [[Image Classification and Auto Annotation]]</description></item><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Finding-Shapes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Finding-Shapes/</guid><description>Grouping points to find shapes Template Matching Process of Template Matching We store a count of the matching points Where the match is best, we&amp;rsquo;ve found the shape Take a template of what we want to find and match it to the image Where the match is best, we&amp;rsquo;ve found the shape This process can be improved by just matching the edges But if only the edges are being matched, then only the text and symbols on the sign will be matched, producing much less noise In the example the template could match with some points in the road or the sky, producing some noise Template Matching in Occluded and Noisy Images Occluded Images Template matching is optimal in occlusion Shapes can be found even when partially occluded Shapes can be found even when partially occluded Template matching is optimal in occlusion Noisy Images Shapes can be found in noise that is challenging for human vision Template matching is optimal in noise Shapes can be found in noise that is challenging for human vision Template matching is optimal in noise Convolution and Correlation Correlation is about‚Üímatching templates You are just shifting the template across the image, looking for a match I\otimes T=\sum_{(x,y)\in W}I_{x,y}T_{x+i,y+j} So we need to flip the Fourier template I \otimes T=\mathscr{F}^{-1}(\mathscr{F}(I)\cdot \times \mathscr{F}(-T)) Convolution is about‚Üíapplication of a template It involves flipping the template I\cdot T = \sum_{(x,y)\in W}I_{x,y}T_{x-i,y-j} This is very slow with large templates Can be sped up by multiplying the transforms OR by multiplying the transforms I\cdot T = \mathscr{F}^{-1}(\mathscr{F}(I)\cdot \times \mathscr{F}(T)) Application of Correlation using FFT # # # # No sliding of templates Cost is 2xFFT plus multiplication Hough Transform Performs the same as {{template matching}}, but is faster The Principle of Duality ‚Üì A line has points x,y gradient m intercept c y=mx+c A line can also be represented as points m,c gradient -x intercept y c=-xm +y If you apply this process to a set of points on a line in one space, you can generate a set of lines in another space.</description></item><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Engineering-Management-and-Law/Engineering-Management-and-Law/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Engineering-Management-and-Law/Engineering-Management-and-Law/</guid><description>Introduction Impactful Organisations Types of Impactful Organisation ‚Üì ####1. Team/Group/Committee ####2. Profit Sharing Partnership/Private Company ####3. Publicly Traded Company ####4.</description></item><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-8/Auctions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-8/Auctions/</guid><description>Auction Design and Objectives Auctions should maximise social welfare - allocate resources to those who value them the most Auctions should be individually rational - agents should not be worse off from participating Auctions should not be manipulatable - agents should be incentivised to behave truthfully In some cases, the aim is to maximise revenue</description></item><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Courseworks/Coursework-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Courseworks/Coursework-1/</guid><description>imageinfo Profile - Win7SP1x86_23418 pstree jackal.exe.exe - pid 3028 cmd.exe - pid 1084 cmd.exe - pid 1608 (terminated) 1084 strings procdump Registrys mentioned</description></item><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-5/Malware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-5/Malware/</guid><description>Exploit Kits Help deliver malware to visitors of websites
They bundle together exploits in commonly neglected software that users will have o Javascript in the browser</description></item><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-6/Malware-and-Memory-Forensics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-6/Malware-and-Memory-Forensics/</guid><description>Memory Forensics Memory Forensics is the process of acquiring an analyzing physical memory (Called System Memory or RAM) in order to find artifacts and evidence</description></item><item><title/><link>https://ik1g19.github.io/UoS-Notes/notes/Web-and-Cloud-Based-Security/Web-and-Cloud-Based-Security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Web-and-Cloud-Based-Security/Web-and-Cloud-Based-Security/</guid><description>Dockers Setting up a new Project Suitable for backend
nodeJS express API DB
MongoDB Frontend
Apache Docker vs Hypervisors Hypervisors are mostly used to virtualise development</description></item><item><title>2018 2019 Paper</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Papers/2018-2019-Paper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Papers/2018-2019-Paper/</guid><description>Paper ![[notes/Advanced Computer Networks/Papers/COMP3210-201819-02-COMP3210W1.pdf]]
A1 (a) A pollution monitoring sensor system is being designed which can be carried in a backpack or bicycle within a city of 10km diameter.</description></item><item><title>Advanced Computer Networks ToC</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Advanced-Computer-Networks-ToC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Advanced-Computer-Networks-ToC/</guid><description>Week 1 [[notes/Advanced Computer Networks/Week 1/Introduction]] üì°[[notes/Advanced Computer Networks/Week 1/Radio Fundamentals]]üìñ Week 2 [[notes/Advanced Computer Networks/Week 2/IoT Architectures]] [[notes/Advanced Computer Networks/Week 2/IoT OS]] üèô[[notes/Advanced Computer Networks/Week 2/IoT]]üì° Week 3 üîã[[notes/Advanced Computer Networks/Week 3/Low Power Wide Area Networks]]üì° [[notes/Advanced Computer Networks/Week 3/MQTT and COAP]] Week 4 6Ô∏è‚É£[[notes/Advanced Computer Networks/Week 4/IPv6 Deployment and Transition]]üì¶ üì°[[notes/Advanced Computer Networks/Week 4/Wireless Sensor Networks]]üå≤üå≥ Week 5 üìª[[notes/Advanced Computer Networks/Week 5/IEEE 802.</description></item><item><title>Advanced Programming Language Concepts ToC</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Advanced-Programming-Language-Concepts-ToC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Advanced-Programming-Language-Concepts-ToC/</guid><description>Week 1 [[Linear Typing]] Week 2 [[Ownership]] Week 3 [[Gradual Typing]] Week 4 [[Dependent Types]] Week 5 [[Lenses]] Week 6 [[Hygienic Macros]] [[Introduction to Metaprogramming]] [[Simple Macros]] Week 7 [[Template Metaprogramming]]</description></item><item><title>Agent Based Negotiation</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-2/Agent-Based-Negotiation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-2/Agent-Based-Negotiation/</guid><description>Conflict of Interest Conflict arises when agents have {different preferences or aims} In [[Introduction to Intelligent Agents#Multi-Agent System MAS|MAS]] conflicts arise when agents are {c1|self-interested} and the agents represent {c1|different stakeholders}</description></item><item><title>Algorithmic Game Theory ToC</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Algorithmic-Game-Theory-ToC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Algorithmic-Game-Theory-ToC/</guid><description>Week 1 [[Intro to Algorithmic Mechanism Design]] Week 2 [[Basics of Mechanism Design]] [[Vickrey-Clarks-Grove (VCG) Mechanism]] Week 3 [[Dominant Strategy Implementation]] [[Revelation Principle]] Week 4 [[Extensions of Stable Matching Problem]] [[Optimal Auctions]] [[Stable Matching]] Week 5 [[Hospitals, Residents Problem]] [[Stable Roommates]]</description></item><item><title>Arbitrary Code Execution and Mitigation</title><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-4/Arbitrary-Code-Execution-and-Mitigation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-4/Arbitrary-Code-Execution-and-Mitigation/</guid><description>How to Execute an Arbitrary Payload We put the payload somewhere in the buffer We put in the return address as the address of the buffer before the payload We fill the buffer before the payload with 0x90 (NOP instruction) When the return register redirects to the buffer it will go ahead to find the payload to execute Creating the Payload Registers before Syscall Assemble the Payload Payload must be assembled into machine code first to be executed</description></item><item><title>Assembly</title><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Labs/Assembly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Labs/Assembly/</guid><description>x86_64 Register Architecture Example: 64-bit Addition Example: 32-bit Addition Example: 16-bit Addition Example: 8-bit Addition Byte Order Virtual Address Space Addressing memory in absolute terms witha 64 bit address is not a good idea It is forbidden on most architectures All references to memory have to be relative from a register</description></item><item><title>Basics of Mechanism Design</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-2/Basics-of-Mechanism-Design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-2/Basics-of-Mechanism-Design/</guid><description>Mechanism [!Definition] A (deterministic) mechanism (for a Bayesian game setting $(N, O, \Theta, p, u))$ is a pair $(A, M)$, where</description></item><item><title>Biometrics ToC</title><link>https://ik1g19.github.io/UoS-Notes/notes/Biometrics/Biometrics-ToC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Biometrics/Biometrics-ToC/</guid><description>[[Computer Vision Techniques]] [[Face and Fingerprint]] [[Gait Biometrics]]</description></item><item><title>Bluetooth</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-9/Bluetooth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-9/Bluetooth/</guid><description>Personal Area Networks Short-range Body area networks Personal devices 2.4GHz Spectrum Band Globally unlicensed part of the spectrum Interference needs to be appropriately handled Aims to maximise bandwidth and minimise RF interference while operating at a very low power Bluetooth Bluetooth 1.</description></item><item><title>Buffer Overflow</title><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-3/Buffer-Overflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-3/Buffer-Overflow/</guid><description>In this example the buffer is filled with 0x41 values (65 decimal, or ASCII &amp;lsquo;A&amp;rsquo;) Execution 1 2 3 gcc -o vuln vuln.</description></item><item><title>Building Machines that See</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Building-Machines-that-See/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Building-Machines-that-See/</guid><description>Types of Computer Vision Vision in the Wild - Used in everyday life e.g. Scanning pictures at a museum to find out more information about them</description></item><item><title>C Functions and Stacks</title><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-2/C-Functions-and-Stacks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-2/C-Functions-and-Stacks/</guid><description>Data types Integer Types datatype size range char 1 byte -128 to 127 or 0 to 255 unsigned char 1 byte 0 to 255 signed char 1 byte -128 to 127 int 2 or 4 bytes -32,768 to 32,767 or -2,147,483,648 to 2,147,483,647 unsigned int 2 or 4 bytes 0 to 65,535 or 0 to 4,294,967,295 short 2 bytes -32,768 to 32,767 unsigned short 2 bytes 0 to 65,535 long 4 bytes -2,147,483,648 to 2,147,483,647 unsigned long 4 bytes 0 to 4,294,967,295 Floating Point Types datatype size range precision float 4 byte 1.</description></item><item><title>C Heaps and Memory Errors</title><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-3/C-Heaps-and-Memory-Errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-3/C-Heaps-and-Memory-Errors/</guid><description>Heap The heap is a region of memory that is not managed automatically Memory on the heap has to be allocated and released by the programmer Memory in the heap is allocated through malloc() and released through free()</description></item><item><title>Computer Vision Techniques</title><link>https://ik1g19.github.io/UoS-Notes/notes/Biometrics/Computer-Vision-Techniques/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Biometrics/Computer-Vision-Techniques/</guid><description>Background Subtraction What the fuck was he talking about in the background subtraction part
Wavelets Wavelets are used for:
Scale-Space analysis Simultaneous decimation in space and frequency 2D Gabor Filter $$g w 2 D(x, y)=\frac{1}{\sqrt{\pi \sigma^2}} e^{-\left(\frac{\left(x-x_0\right)^2+\left(y-y_0\right)^2}{2 \sigma^2}\right)} e^{-i 2 \pi \pi_0\left(\left(x-x_0\right) \cos \theta+\left(y-y_0\right) \sin \theta\right)}$$ $$\begin{array}{ll} -x_0, y_0 \text { - central position } &amp;amp; -\theta \text { - orientatio } \mathrm{n} \text { of the wavelet } \ -f_0 \text { - central frequency } &amp;amp; -\sigma \text { - width of the wavelet } \end{array}$$</description></item><item><title>Consistent Matching</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Consistent-Matching/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Consistent-Matching/</guid><description>Constrained Matching Assume we are given a number of correspondences between the interest points in a pair of images We estimate which of the correspondences are inliers (e.</description></item><item><title>Cooperative Games</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-10/Cooperative-Games/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-10/Cooperative-Games/</guid><description>Coalitional Games Cooperative games are also called coalitional games
[!Definition] A coalitional game with transferable utility is a pair $(N,v)$ such that</description></item><item><title>Covariance and Prinicpal Components</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Covariance-and-Prinicpal-Components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Covariance-and-Prinicpal-Components/</guid><description>Random Variables and Expected Values Variance and covariance are expressed in terms of random variables and expected values Random Variable - A variable that takes on different values due to chance</description></item><item><title>Data Management</title><link>https://ik1g19.github.io/UoS-Notes/notes/Data-Management/Data-Management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Data-Management/Data-Management/</guid><description/></item><item><title>Dependent Types</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-4/Dependent-Types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-4/Dependent-Types/</guid><description>Dependent Types Typing Rules $$\dfrac{\Gamma\vdash exp_1:A;;;;\Delta\vdash exp_2:B} {\Gamma\vdash (exp_1,exp_2):A\times B}$$
$$ \dfrac{\Gamma\vdash exp:A} {\Gamma\vdash (exp,1):A\sqcup B} \hspace{10mm} \dfrac{\Gamma\vdash exp:B} {\Gamma\vdash (exp,2): A\sqcup B} $$</description></item><item><title>Distributed Systems and Networks</title><link>https://ik1g19.github.io/UoS-Notes/notes/Distributed-Systems-and-Networks/Distributed-Systems-and-Networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Distributed-Systems-and-Networks/Distributed-Systems-and-Networks/</guid><description/></item><item><title>Dominant Strategy Implementation</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-3/Dominant-Strategy-Implementation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-3/Dominant-Strategy-Implementation/</guid><description>Are Indirect Mechanisms ever useful A direct truthful mechanism forces the agents to reveal their types completely. There might be settings where agents are not willing to compromise their privacy to this degree</description></item><item><title>Edge Detection</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Edge-Detection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Edge-Detection/</guid><description>An edge is contrast First Order Edge Detection Horizontal Differencing Detects vertical edges Horizontal Differencing‚ÜíCalculates the difference between the current point and the point to the right</description></item><item><title>Extensions of Stable Matching Problem</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-4/Extensions-of-Stable-Matching-Problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-4/Extensions-of-Stable-Matching-Problem/</guid><description>Classical Stable Matching Problem Participants A set of $n$ leaders A set of $n$ followers Preferences Each leader has strict preferences over all followers Each follower has strict preferences over all leaders Every leader ranks all followers (i.</description></item><item><title>Extensive-Form Games</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-5/Extensive-Form-Games/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-5/Extensive-Form-Games/</guid><description>In strategic form games, players make a move simultaneously In extensive form games players make choices sequentially Extensive form games model different kinds of strategic sequential decision making</description></item><item><title>Eye and Human Vision</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Eye-and-Human-Vision/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Eye-and-Human-Vision/</guid><description>A framework for computer vision! Modelling the eye Human eye Evolved for survival Function of the eye‚ÜíTo form an image on the retina Lens is shaped, rather than moved Image is transmitted via‚ÜíOptic nerve Optics Sensors Need a lot of sensors</description></item><item><title>Face and Fingerprint</title><link>https://ik1g19.github.io/UoS-Notes/notes/Biometrics/Face-and-Fingerprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Biometrics/Face-and-Fingerprint/</guid><description>Processes Fingerprints Fingerprint Sensors Optical Fingerprint Sensors Capacitive Fingerprint Sensors Fingerprint Pattern 1 Fingerprint is a set of ridges</description></item><item><title>Finding More Shapes</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Finding-More-Shapes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Finding-More-Shapes/</guid><description>Hough Transform for Circles Has duality, similar to line equations OR Points x_0,y_0 Radius r
Centre x,y $$(x-x_0)^2+(y-y_0)^2=r^2$$ OR $$(x-x_0)^2+(y-y_0)^2=r^2$$ Radius r Centre $x_0,y_0$ Points x,y Circle Voting and Accumulator Space Illustrations courtesy of Mark Nixon</description></item><item><title>Formulae</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-8/Notes/Formulae/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-8/Notes/Formulae/</guid><description>$F(b_i)$ - The probability of winning given bid $b_i$ $\theta_i$ - The value of the item to agent $i$
First Price Auction Expected Utility $E[u_i(\theta_i)|b_i]=(\theta_i-b_i)F(b_i)$</description></item><item><title>Foundations of Comp Sci</title><link>https://ik1g19.github.io/UoS-Notes/notes/Foundations-of-Comp-Sci/Foundations-of-Comp-Sci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Foundations-of-Comp-Sci/Foundations-of-Comp-Sci/</guid><description/></item><item><title>Further Edge Detection</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Further-Edge-Detection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Further-Edge-Detection/</guid><description>Sobel is a good basic operator but has blurred and noisy edges
Canny Edge Detection Operator Stages in Canny Edge Detection Gaussian Smoothing Sobel Edge Detection Non-maximum Suppression Hysteresis Thresholding Canny gives thin edges in the correct places, but is a more complex process</description></item><item><title>Gait Biometrics</title><link>https://ik1g19.github.io/UoS-Notes/notes/Biometrics/Gait-Biometrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Biometrics/Gait-Biometrics/</guid><description>Advantages
Perceivable at a distance Hard ot disguise Potential Applications
Security Surveillance Immigration Forensics Medicine Databases Early UCSD Data 6 Subjects 7 Sequences Sony Hi8 Video camera HiD (NIST) Database Acquired by NIST/ USF on DARPA Human ID at a Distance (HiD) program 122 subjects Canon progressive scan 30 fps Included change in surface, shoe and luggage (covariates) Included evaluation protocol Southampton Data 100 subjects Sony TRV900E digital camcorders Filmed indoors and outdoors Included covariate data for 12 subjects Also from HiD CASIA (B) Database 24 subjects 11 Viewpoints Different clothing and carrying conditions Other Datasets Old Southampton data CMU Wuhan Maryland MIT GATech Southampton Multibiometrics (face in video, gait, ear, semantics) Techniques for Gait Extraction and Description Silhouette Descriptions (Common) Established statistical analysis (Temporal) symmetry (Velocity) moments (Unwrapped) silhouette Modelling Movement (Few) Pendular thigh motion model Coupled and forced oscillator Anatomically-guided skeleton Velocity Moments Extension of spatial moments Applied to silhouettes Selected by ANOVA $$ A_{m n \mu \gamma}=\frac{m+1}{\pi} \sum_{i=2}^{\text {images }} \sum_{x, y} U(i, \mu, \gamma) S(m, n) P_{i_{x, y}} $$</description></item><item><title>Gradual Typing</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-3/Gradual-Typing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-3/Gradual-Typing/</guid><description>Typing Static Typing - Correctness of typing is checked at compile time Dynamic Typing - Correctness of typing is checked at runtime Gradual Typing - Combines both Static and Dynamic typing</description></item><item><title>Hospitals, Residents Problem</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-5/Hospitals-Residents-Problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-5/Hospitals-Residents-Problem/</guid><description>Hospitals/Residents Problem and Hospitals/Residents with Ties Agents on one side can get matched to several candidates Many-one stable matching problem Working in practise:</description></item><item><title>Hygienic Macros</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-6/Hygienic-Macros/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-6/Hygienic-Macros/</guid><description>Problems with C Style Macros Most of the problems stem from the way that a macro usage hides the code it maps to at the call site The problems also stem from the fact that these are lexical macros that allow names to be mapped to arbitrary token streams What might look like reasonable code may not even be grammatically correct, never mind behaviourally correct</description></item><item><title>IEEE 802.11_ Wi-Fi</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-6/IEEE-802.11_-Wi-Fi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-6/IEEE-802.11_-Wi-Fi/</guid><description>IEE 802.11 Set of standards that cover physical specifications (PHY) and MAC for Wireless Local Area Networks (WLANs) Intended to be a replacement for wired Ethernet Sits in the Network Access layer of the TCP/IP model History 802.</description></item><item><title>IEEE 802.15.4 and 6LoWPAN</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-5/IEEE-802.15.4-and-6LoWPAN/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-5/IEEE-802.15.4-and-6LoWPAN/</guid><description>IEE 802.15.4 Standard that covers physical specifications (PHY) and MAC for LR-WPANs Sits in the Network Access layer of the TCP/IP model Layer 1 and Layer 2 of the OSI 7-layer model Applications Wireless Sensor Networks / Environmental Sensor Networks Industrial communications and control Home automation Health monitoring Smart metering Asset &amp;amp; inventory tracking Intelligent agriculture Alternatives and Performance Application 802.</description></item><item><title>Image Classification and Auto Annotation</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Image-Classification-and-Auto-Annotation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Image-Classification-and-Auto-Annotation/</guid><description>Multilabel Classification Multilabel classification, in the context of images, is called Automatic Annotation</description></item><item><title>Image Formation</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Image-Formation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Image-Formation/</guid><description>Inverse Fourier Transformation Reconstructing a signal from its Fourier transformation Rectangular pulse is not reconstructed perfectly as the limits used are -6 to 6, if $-\infty$ to $\infty$ were used then the pulse would&amp;rsquo;ve been reconstructed perfectly Inverse Fourier transform is used for Reconstruction</description></item><item><title>Image Sampling</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Image-Sampling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Image-Sampling/</guid><description>Sampling Signals Bad sampling‚Üíwhere you sample too little, you get the wrong signal This is called Aliasing Good sampling‚Üíwhere you sample often, you get a more accurate signal Aliasing - The wrong signal is obtained due to poor sampling Aliasing in Sampled Imagery The blinds have a high frequency structure, there is an extra pattern in the low resolution image</description></item><item><title>Intelligent Agents ToC</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Intelligent-Agents-ToC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Intelligent-Agents-ToC/</guid><description>Week 1 [[Introduction to Intelligent Agents]] Week 2 [[Agent Based Negotiation]] Week 3 [[Strategic Form Games]] [[Utility]] Week 4 [[Strategic Form Games II]] Week 5 [[Extensive-Form Games]] Week 6 [[Linear Programming]] [[Linear Programming II]] Week 7 [[Preference Elicitation]] Week 8 [[Auctions]] Week 9 [[Voting]] Week 10 [[Cooperative Games]]</description></item><item><title>Interaction Design</title><link>https://ik1g19.github.io/UoS-Notes/notes/Interaction-Design/Interaction-Design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Interaction-Design/Interaction-Design/</guid><description/></item><item><title>Intro to Algorithmic Mechanism Design</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-1/Intro-to-Algorithmic-Mechanism-Design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-1/Intro-to-Algorithmic-Mechanism-Design/</guid><description>Mechanism Design In systems with strategic participants:
The system designer must anticipate strategic behaviour to create good and reliable design We cannot expect participants to behave against their own interests Goal: Design rules so that strategic behaviour by participants leads to a desirable outcome</description></item><item><title>Introduction</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-1/Introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-1/Introduction/</guid><description> Shannon Information Shannon Entropy ‚Üì $h(x)=-\log_2 p(x)$ Where $p(x)$ - the probability of $x$ $-\log_2 x$ for $x&amp;lt;1$ Information Entropy ‚Üì The average amount of information transmitted for a series of values $H(x)=-\sum\limits_x p(x)\log_2 p(x)$ Example Consider random variable $x$ which has 8 possible values, each of which equally likely $H(x)=-8\times\frac{1}{8}\log_2\frac{1}{8}=3\text{ bits}$ This makes sense as 3 bits are needed to represent all states 000,001,010,011,100,101,110,111 So this data stream only needs 3 bits per sample to represent all the information Non-Uniform Distributions Compact Representations Non-uniform probabilities allow us to use a more compact representation Shannon&amp;rsquo;s figure is the {{lower}} bound we can aim for Use {{more}} bits for the higher information states Example The less likely a value, {{the more information is imparted by revealing its value}} If we learn two independent facts, we can sum all the $h$ values, since information is additive ‚Üì $p(x,y)=p(x)p(y)$ $h(x,y)=h(x)+h(y)$ Information theory begun with the publication of Claude Shannon&amp;rsquo;s work &amp;ldquo;A Mathematical Theory of Communication&amp;rdquo; The Degree of Surprise‚ÜîShannon proposed a measure of information that considers a discrete random variable and asks how much information is received when we observe a specific value for this variable</description></item><item><title>Introduction</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Introduction/</guid><description>Applications of Computer Vision Medical Imaging Modern Cameras/Phones Robotics Image Coding Biometrics Product Inspection Images consist of picture elements known as pixels 2D Images are matrices of numbers Point Operations Calculating values of specific points Group Operations Processing neighbourhoods of pixels Feature Extraction Finding shapes Applications of Computer Vision ‚Üì Image coding Product inspection Robotics Modern cameras/Phones Medical imaging Biometrics Gait Recognition Recognising people from the motion of their whole body</description></item><item><title>Introduction to C</title><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-2/Introduction-to-C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-2/Introduction-to-C/</guid><description>Memory Structure As data is added to the stack, the memory addresses decrease As data is added to the heap, the memory addresses increase</description></item><item><title>Introduction to Intelligent Agents</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-1/Introduction-to-Intelligent-Agents/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-1/Introduction-to-Intelligent-Agents/</guid><description>Agents and Environments Agents #flashcard A computer system capable of autonomous action in some environment, in order to achieve its delegated goals</description></item><item><title>Introduction to Metaprogramming</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-6/Introduction-to-Metaprogramming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-6/Introduction-to-Metaprogramming/</guid><description>Limitations of Library Re-use These re-use methods have limitations
Encapsulation can prevent optimisation Can make (static) error checking difficult - error reporting may not suit the software domain Library Scaling can be a problem (the Python Standard Library contains over 200 modules!</description></item><item><title>IoT</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-2/IoT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-2/IoT/</guid><description>The Internet of Things Ubiquitous computing with a focus on objects Computing being distributed into the environment and physical objects IoT Challenges Standardisation Fragmented implementations between associations, standard bodies and governments Big Data IoT devices generate a lot of data How to choose which data to keep Balance of storing data vs analysing data and discarding How does this affect data centers and server technology Data Security Certification and regulation needed for technology, especially when health related Consumers need to be convinced their data is safe from misuse or theft IoT devices are generally unattended, easy to physically attack and easy to eavesdrop on Limited energy/computing capabilities for encryption Connectivity Security How to encrypt traffic How to ensure ports aren&amp;rsquo;t vulnerable Power IoT devices need to last as long as possible on as little battery as possible Reliability What happens if there is no WiFi, LPWAN or cellular coverage Communication Choices WiFi Bluetooth Zigbee 6LowPAN over 802.</description></item><item><title>IoT Architectures</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-2/IoT-Architectures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-2/IoT-Architectures/</guid><description>Typical IoT Hardware Elements ‚Üì PSU MCU Coms Power Source I/O Storage Sensors Actuators Switched Mode Regulator Battery Radio Transceiver Flash Hardware Architecture ‚Üì A lot depends on which MCU family is chosen [System on Chip](.</description></item><item><title>IoT OS</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-2/IoT-OS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-2/IoT-OS/</guid><description>Reasons to use an OS Device independence Services Timers Threads An OS provides drivers, networking and HAL HAL‚ÜîHardware Abstraction Layer !</description></item><item><title>IPv6 Deployment and Transition</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-4/IPv6-Deployment-and-Transition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-4/IPv6-Deployment-and-Transition/</guid><description>Carrier-Grade NAT ![[notes/Advanced Computer Networks/Images/Pasted image 20220818191613.png|300]]
ISP subnet becomes a large private network Home routers are assigned private IPs Amount of required public addresses is reduced as well as cost Does not actually solve IPv4 exhaustion Motivation for IPv6 IPv4 exhaustion Direct addressability End-to-end global addressing as intended No more NAT Less complex networks What is needed for IPv6 Deployment IPv6 address space IPv6 routing IPv6 firewalling DNS that serves IPv6 IPv6 address allocation mechanism DHCPv6 Provides a managed way to allocate IPv6 addresses And other information (search domain, tftp server) Prefix delegation makes automated sub-allocation of IPv6 address space possible DHCPv6 Interaction Client sends a SOLICIT over multicast Server responds with an ADVERTISEment of an address directly to the client Client sends a REQUEST for the advertised address over multicast Server sends a REPLY confirming the address allocation DUIDs Used to identify a host to the DHCPv6 server In IPv4, this was traditionally the MAC address What about for Dual-stack systems - Different IDs for IPv4 and IPv6 Dual-boot systems - Different DUIDs OS reinstall - New DUID Dual Stack Deployment Running both IPv4 and IPv6 protocols on the same equipment Devices have both IPv4 and IPv6 addresses Need to secure (e.</description></item><item><title>IPv6 Deployment and Transition 2</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-7/IPv6-Deployment-and-Transition-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-7/IPv6-Deployment-and-Transition-2/</guid><description>Tunnelling The encapsulation of IPv6 packets in IPv4 packets between two destinations 6in4 ![[notes/Advanced Computer Networks/Images/Pasted image 20220817184232.png|300]] !</description></item><item><title>Large Scale Image Search</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Large-Scale-Image-Search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Large-Scale-Image-Search/</guid><description>Text Information Retrieval Weighting the Vectors The number of times a word occurs in a document reflects the importance of that word in the document</description></item><item><title>Lenses</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-5/Lenses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-5/Lenses/</guid><description/></item><item><title>Linear Programming</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-6/Linear-Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-6/Linear-Programming/</guid><description>Linear Programs Key Features A linear objective function to be maximised/minimised e.g. $c_1x_1+c_2x_2+&amp;hellip;+c_nx_n$ We often use vector notation and dot product to write $\vec{c}\cdot\vec{x}$ A system of linear constraints The decision variables are non-negative e.</description></item><item><title>Linear Programming II</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-6/Linear-Programming-II/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-6/Linear-Programming-II/</guid><description>Computing the Nash Equilibrium of a two-player zero-sum Game Zero-Sum - Utilities add up to 0 Expected utility for player 1 will be:</description></item><item><title>Linear Typing</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-1/Linear-Typing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-1/Linear-Typing/</guid><description>Propositional Logic A Tautology is a formula which evaluates to true for any values of its propositional variables e.g. $A\wedge B \to A$ $A\to A\vee B$ $A\to (B \to A)$ $A\vee \neg A$ $(A\to B)\wedge (\neg A\to B)\to B$ A Sequent is an expression of the form $\phi_1,\dots,\phi_n\vdash \psi$ For a sequent to be valid, it must evaluate to true for any potential assignment of variables that will make the formula on the left side of $\vdash$ evaluate to true An Inferefence Rule is an expression of the form $\dfrac{\alpha_1;;\dots;;\alpha_n}{\beta}$, where $\alpha_1,\dots\alpha_n$ are sequents The inference rule is valid if sequent $\beta$ is valid every time the sequents $\alpha_1,\dots\alpha_n$ are valid</description></item><item><title>Local Features and Matching</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Local-Features-and-Matching/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Local-Features-and-Matching/</guid><description>Local Features Interest points are detected in the image and a feature is extracted from the surrounding pixels, represented by, usually just one, featurevector Feature points are used for</description></item><item><title>Local Interest Points</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Local-Interest-Points/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Local-Interest-Points/</guid><description>What makes a good Interest Point in an Image? Invariance to brightness change Local changes as well as global ones Sufficient texture variation in the local neighbourhood Invariance to position between the angle/position of the scene to the camera Finding Interest Points Different types of interest points to choose from Blob Detection - Difference-of-Gaussian Extrema Corner Detection - Harris and Stephens Harris and Stephens Corner Detector Basic Idea Shifting that window by a small amount in any direction should give a large change in intensity Search for corners by looking through a small window &amp;ldquo;Flat&amp;rdquo; Region No change in all directions &amp;ldquo;Edge&amp;rdquo; Region No change along the edge direction &amp;ldquo;Corner&amp;rdquo; Region Significant change in all directions Mathematics Weighted average change in intensity between a window and a shifted version by $(\Delta x,\Delta y)$ of that window</description></item><item><title>Low Power Wide Area Networks</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-3/Low-Power-Wide-Area-Networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-3/Low-Power-Wide-Area-Networks/</guid><description>Where does LPWAN sit? ![[notes/Advanced Computer Networks/Images/Pasted image 20220817175509.png|500]]
LoRa LoRa Modulation ISM 868/915MHz frequency Proprietary PHY layer (Semtech) Low data rate, simple low level links 3-50 kbit/s data rates Characteristics of LoRa Main gains of LoRa are Spread Spectrum and Chirp design Spread Spectrum and Chirp Design High immunity to interference Long range due to high sensitivity Doppler resistant Good for fast moving things Multipath resistant Better in urban environments with lots of reflecting surfaces Scalability To lots of nodes transmitting on the same frequency LoRaWAN Architecture LoRaWAN Enabled Devices Vehicle detector Water meter CO$_2$ Pressure Frequencies EU 863-870MHz USA 902-928MHz China 779-787 and 470-510MHz Channels and Restrictions In the EU, LoRaWAN typically utilises the 868MHz band This band has restrictions limiting the amount of bandwidth which can be taken up by a single application The most prevalent implemented solution is a duty cycle limitation Longer packet = Less frequent e.</description></item><item><title>Machine Learning for Pattern Recognition</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Machine-Learning-for-Pattern-Recognition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Machine-Learning-for-Pattern-Recognition/</guid><description>Feature Spaces Many computer vision applications involving machine learning take the following form Feature Extractor - Where cool image processing happens</description></item><item><title>MQTT and COAP</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-3/MQTT-and-COAP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-3/MQTT-and-COAP/</guid><description>MQTT - By IBM in 90s - ! - Designed to be smaller packets and less overhead than HTTP - Messages are published to a broker - Clients subscribe to data streams - MQTT topics are hierarchical - Example JSON message over MQTT - !</description></item><item><title>Network Monitoring</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-9/Network-Monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-9/Network-Monitoring/</guid><description>Network Monitoring Metrics to monitor to indicate a security breach
Traffic metadata Traffic payloads ARP/NDP tables Routes Switch port utilisation Firewall logs DNS entries and queries Network Flow Monitoring A way to collect [[#Metadata]] about traffic for analysis</description></item><item><title>Network Security</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-9/Network-Security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-9/Network-Security/</guid><description>Network Attacks Lockheed Martin&amp;rsquo;s Cyber Kill Chain Model 7 stages in a cyber attack Not always the best tool as has steps that occur outside of your control Models such as Mandiant Cyber Attack Life Cycle focus on steps you can detect and prevent 1.</description></item><item><title>Optimal Auctions</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-4/Optimal-Auctions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-4/Optimal-Auctions/</guid><description>Optimal Auctions for Selling a Single Item So far we have ignored the mechanism&amp;rsquo;s revenue (i.e. some of the payments made by the agents), except in attempting to keep it as close to zero as possible (budget balanced).</description></item><item><title>Ordinal Regression</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-7/Notes/Ordinal-Regression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-7/Notes/Ordinal-Regression/</guid><description>[!Info] Agent has partial information and their preference ordering Goal is to find the agent&amp;rsquo;s preference ordering Use the partial ordering and a set of parameters to generate a complete ordering</description></item><item><title>Ownership</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-2/Ownership/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-2/Ownership/</guid><description>Only one variable ‚Äúowns‚Äù data at any given moment in time You can see, but you cannot change something that you don‚Äôt own</description></item><item><title>Point Operators</title><link>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Point-Operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Computer-Vision/Point-Operators/</guid><description>Histogram of an image The histogram shows the contrast
Brightening an Image $N_{x,y}=k\cdot O_{x,y} + l$
Where
x and y are the coordinates l is the level O is the old image N is the new image k is the gain To change the brightness of an image, add or subtract to the level at each point So to change the brightness of an image, choose values for $k$ and $l$</description></item><item><title>Preference Elicitation</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-7/Preference-Elicitation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-7/Preference-Elicitation/</guid><description>Preference Orderings For finite outcome set $O$ $y\succeq z$ means $y$ is weakly prefered to $z$ $y\succ z$ means $y$ is strictly prefered to $z$</description></item><item><title>Principals of Cyber Security</title><link>https://ik1g19.github.io/UoS-Notes/notes/Principles-of-Cyber-Security/Principles-of-Cyber-Security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Principles-of-Cyber-Security/Principles-of-Cyber-Security/</guid><description/></item><item><title>Programming 2</title><link>https://ik1g19.github.io/UoS-Notes/notes/Programming-2/Programming-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Programming-2/Programming-2/</guid><description/></item><item><title>Programming 3</title><link>https://ik1g19.github.io/UoS-Notes/notes/Programming-3/Programming-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Programming-3/Programming-3/</guid><description/></item><item><title>Radio Fundamentals</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-1/Radio-Fundamentals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-1/Radio-Fundamentals/</guid><description>Radio Spectrum Generally used for broadcasting Centre frequency determines characteristics of the channel we&amp;rsquo;re creating Using a greater frequency Send more data More easily use the bandwidth Using a greater bandwidth Greater the width around the centre frequency Greater data rate achievable Different frequencies are allocated for different purposes IEEE 802.</description></item><item><title>Revelation Principle</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-3/Revelation-Principle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-3/Revelation-Principle/</guid><description>Revelation Principle The Revelation Principle tell us that any social choice function that can be implemented (in Dominant Strategy) by any mechanism, can also be implemented by a direct, truthful mechanism</description></item><item><title>SEG</title><link>https://ik1g19.github.io/UoS-Notes/notes/SEG/SEG/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/SEG/SEG/</guid><description/></item><item><title>Simple Macros</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-6/Simple-Macros/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-6/Simple-Macros/</guid><description>Text-based Macros The earliest form of macros appeared in macro assembly languages where a name could be given to a common pattern of assembler instructions</description></item><item><title>Smart Home IoT</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-5/Smart-Home-IoT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-5/Smart-Home-IoT/</guid><description> Interconnected Smart Home IoT Devices Zigbee maintains a low-power self-{{forming}}, self-{{healing}} {{mesh}} network When a Zigbee device is online, it starts to connect with other Zigbee devices for building a network of related devices Smart Home Technology Trends Manufacturers of smart home IoT devices need to ensure their products and services will work on different platforms Smart home technology becomes smarter due to technologies such as machine learning, computer vision and natural language processing In-home healthcare becoming smarter offers potential to reduce stress put on traditional healthcare channels Threats and Countermeasures Man-in-the-middle‚ÜîAn attacker breaches, interrupts or spoofs communications between two systems Data and Identity Theft‚ÜîData generated by unprotected smart appliances provide attackers with personal information that can be exploited Device Hijacking‚ÜîThe attacker hijacks and assumes control of a device Distributed Denial of Service (DDoS)‚ÜîControl multiple IoT devices to initiate excessive communication traffic to a target network node, temporarily or indefinitely disrupting services of a host connected to the internet Permanent Denial of Service (PDoS)‚ÜîDamaging the device such that it would require replacement of reinstallation of hardware Dynamic Electricity Pricing ‚Üì Set high prices at peak energy hours to discourage the energy usage there for energy load balancing Energy Scheduling for a Smart Home Decisions ‚Üì When to launch a home IoT appliance At what power level For how long Utilize renewable energy Subject to scheduling constraints Targets ‚Üì Reduce user bill Reduce Peak-to-Average ratio of grid energy usage Maximize renewable energy usage The Smart Home IoT scheduler computes scheduling solutions for the future, meaning it requires the future pricing Pricing Models Guideline Pricing‚ÜîUtility publishes it one day ahead to guide customers to schedule their appliances Realtime Pricing‚ÜîUtility uses it to bill customers Handling Multiple Users ‚Üì Dynamic pricing Game theory</description></item><item><title>Software Defined Networking</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-7/Software-Defined-Networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-7/Software-Defined-Networking/</guid><description>Software Defined Network A network in which the control plane is physically separate from the data plane Control Plane !</description></item><item><title>Software Security ToC</title><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Software-Security-ToC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Software-Security-ToC/</guid><description>Week 1 [[Software Vulnerabilities]] Week 2 [[C Functions and Stacks]] [[Introduction to C]] Week 3 [[Buffer Overflow]] [[C Heaps and Memory Errors]] Week 4 [[Arbitrary Code Execution and Mitigation]]</description></item><item><title>Software Vulnerabilities</title><link>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-1/Software-Vulnerabilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Software-Security/Week-1/Software-Vulnerabilities/</guid><description>Buffer Overflow - We can overflow a buffer meant to manipulate data and overwrite arbitrary memory addresses, this can be used maliciously by overwriting the original program&amp;rsquo;s code with our own code</description></item><item><title>Stable Matching</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-4/Stable-Matching/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-4/Stable-Matching/</guid><description>Leaders can only lead and followers can only follow
Setting Participants A set of leaders $L={\mathbf{1}, \ldots, \boldsymbol{n}}$ A set of followers $\boldsymbol{F}={\mathbf{1}, \ldots, \boldsymbol{n}}$ Preferences Each leader has strict preferences over all followers Each follower has strict preferences over all leaders All preferences together: preference profile Objective To find a one-to-one stable matching (one-to-one) Matching: each leader is paired with at most one follower and vice versa Stable: no pair $(\boldsymbol{l}, f)$ wants to deviate Stable Matching A matching is stable if</description></item><item><title>Stable Roommates</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-5/Stable-Roommates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-5/Stable-Roommates/</guid><description>Find your roommate Each student has a strict preferemce list Same notion of stability as stable marriage No longer a bipartite graph Stable matching (stable marriage) is a special case</description></item><item><title>Strategic Form Games</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-3/Strategic-Form-Games/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-3/Strategic-Form-Games/</guid><description>[!Definition] A strategic form game is a tuple $$\langle N,S_1,&amp;hellip;,S_n,u_1,&amp;hellip;,u_n \rangle$$ Where
$N={1,&amp;hellip;,n}$ is a finite set of players $S_i$ is a finite set of strategies for each player $i$ $u_i=S_1\times &amp;hellip;\times S_n\rightarrow \mathbb{R}$ is a utility function for player $i$ Each $(s_1,&amp;hellip;,s_n) \in S_1 \times &amp;hellip; \times S_n$ is called a strategy profile or strategy combination Strategy profiles are also denoted by $$(s_i,s_{-i})$$ to highlight the strategy of player $i$ $s_{-i}$ denotes the strategy combination with player $i$ $$s_{-i}=(s_1,&amp;hellip;,s_{-i},s_{i+1},&amp;hellip;,s_n)$$ We assume players are rational decision makers and have complete and common knowledge about each others strategies, utilities and their rationality</description></item><item><title>Strategic Form Games II</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-4/Strategic-Form-Games-II/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-4/Strategic-Form-Games-II/</guid><description>Mixed Nash Equilibria To guarantee the existence of equilibria, we extend the concept of a strategic form game with the notion of mixed strategy</description></item><item><title>Template Metaprogramming</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-7/Template-Metaprogramming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Programming-Language-Concepts/Week-7/Template-Metaprogramming/</guid><description>Parametric Declarations Parametric declarations of classes, structures, functions etc could be loosely considered as another very simple common form of metaprogramming.</description></item><item><title>Test</title><link>https://ik1g19.github.io/UoS-Notes/notes/Comp-Systems-1/Comp-Systems-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Comp-Systems-1/Comp-Systems-1/</guid><description/></item><item><title>Theory of Computing</title><link>https://ik1g19.github.io/UoS-Notes/notes/Theory-of-Computing/Theory-of-Computing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Theory-of-Computing/Theory-of-Computing/</guid><description/></item><item><title>Utility</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-3/Utility/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-3/Utility/</guid><description>Basic Setting A game is a mathematical model of interactive decision making Different agents interact with the goal to achieve the best possible outcome</description></item><item><title>Vickrey-Clarks-Grove (VCG) Mechanism</title><link>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-2/Vickrey-Clarks-Grove-VCG-Mechanism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Algorithmic-Game-Theory/Week-2/Vickrey-Clarks-Grove-VCG-Mechanism/</guid><description>Quasilinear Mechanism In a quasilinear utility setting:
the set of outcomes is $O=X \times \mathbb{R}^n$ for a finite set of choices $X$, and when outcome $o=\left(x,\left(p_1, \ldots, p_n\right)\right)$ is chosen, the utility of an agent $i$ given joint type $\theta$ is $u_i(o, \theta)=u_i(x, \theta)-p_i$ [!</description></item><item><title>Voting</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-9/Voting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-9/Voting/</guid><description>Components of a Social Choice Model Assume a set $Ag={1,&amp;hellip;,n}$ of agents (or voters) These are the entities that will be expressing preferences</description></item><item><title>Week 1</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-1/</guid><description>Introduction What is a Database? Represents some aspect of the real world A logically coherent collection of data with some inherent meaning Designed, built and populated with data for a specific purpose Has an intended group of users, and some preconceived applications in which these users are interested Database System vs.</description></item><item><title>Week 2</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-2/</guid><description>Data Storage Storage Organisation The Memory Hierarchy Cache Volatile storage Limited capacity Very expensive Hierarchical Typical capacities and Access times L2‚Üí~10^5 bytes, 5-10 cycles L1‚Üí~10^4 bytes, &amp;lt;5 cycles Registers‚Üí~10^1 bytes, 1 cycle Very fast Tertiary Storage Very cheap Typical access time‚Üí $10^1-10^2$s Very slow Typical capacity‚Üí10^{13}-10^{17} bytes Very large capacity Non-volatile storage Secondary Storage Non-volatile storage Typical capacity‚Üí10^{11}-10^{12} bytes Typical access time‚Üí10^{-3} s (10^6 cycles) Large capacity Slow Cheap Main Memory Typical access time‚Üí10^{-8} s (20-30 cycles) Fast Affordable Volatile storage Medium capacity Typical capacity‚Üí10^9-10^{10} bytes Secondary Storage Hard Disk Drives Typical Storage medium for databases Disk Structure Zone Bit Recording Tracks closer to the disc edge are longer than those closer to the axis</description></item><item><title>Week 3</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-3/</guid><description>Access Structures Index Basics Relations are stored in files
Files are stored as collections of blocks
How do we find tuples that match some criteria?</description></item><item><title>Week 4</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-4/</guid><description>Relational Algebra Relations are represented as a subset of a cartesian product of sets Basic Notation K-Tuple‚ÜîAn ordered sequence of k objects (need not be distinct) |D_1\times D_2\times &amp;hellip; \times D_k| =** }}{{|D_1|\times |D_2|\times &amp;hellip;\times |D_k|}}{{ ** K-ary Relation‚ÜîA subset of a cartesian product of k sets i.</description></item><item><title>Week 5</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-5/</guid><description>Query Processing Query Processing Chain Query optimisation takes place over Selection of Logical Query Plan}} and {{Selection of Physical Query Plan Query Plans Logical Query Plan Operators taken from relational algebra Abstract Algebraic representation of query Physical Query Plan ‚Üì Algorithms selected for each operator in plan Execution order specified for operators Optimisation Need to start optimisation from **a **[Canonical Form](Advanced Databases/Week 5/Query Processing/Query Optimisation/Optimising Query Trees/Tree Structures and Canonical Form/Canonical Form.</description></item><item><title>Week 6</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-6/</guid><description>Transactions and Concurrency Concurrency In a multi-user DBMS, many users may use the system concurrently Stored data items may be accessed concurrently by user programs Transaction‚ÜîA logical unit of work that changes the contents of a database Serial vs Serialisable Serial Transactions‚ÜîTransactions running one at a time, with no overlap Serialisable Transactions‚ÜîTransactions behaving as if they were serial, but may be executed concurrently Transactions should be serialisable Atomicity System failure partway through a transaction may leave the database in an inconsistent state Atomic Transactions‚ÜîOperations within the transaction are either all executed successfully or not executed at all Transaction Problems Basic Database Access Operations read(X)‚ÜíReads a database item $X_d$ into a program variable $X_T$ in transaction $T$ write(X)‚ÜíWrites the value of program variable $X_T$ in transaction $T$ into the database item $X_d$ The Lost Update Problem #Db ‚Üì Two transactions have operations interleaved so that some DB items are incorrect The Temporary Update (Dirty Read) Problem #Db ‚Üì One transaction updates a DB item and then fails, item is accessed before reverting to its original value The Incorrect Summary Problem ‚Üì One transaction calculates an aggregate summary function on multiple records while other transactions update records Aggregate function may read some values before they are updated, and some after The Unrepeatable Read Problem #Db ‚Üì One transaction reads an item twice, while another changes the item between the two reads Transaction Processing When a transaction is submitted for execution, the system must ensure that ‚Üì All operations in the transaction are completed successfully, with effect recorded permanently in the database, or There is no effect on the database or other transactions Transactions may be read-only}} or {{update Transaction Life Cycle ‚Üì ACID ACID Properties Atomicity‚ÜîA transaction is either performed completely or not at all #Db Consistency‚ÜîCorrect transaction execution must take the database from one consistent state to another #Db Isolation‚ÜîA transaction should not make updates externally visible (to other transactions) until committed #Db Durability‚ÜîOnce database is changed and committed, changes should not be lost because of failure #Db Schedules A schedule S of n transactions is an ordering of the operations of the transactions}}, subject to {{the constraint that for each transaction }}{{T}}{{ that participates in }}{{S}}, the operations in T must {{appear in the same order in }}{{S}}{{ that they do in }}{{T Two operations in a schedule are conflicting if ‚Üì They belong to different transactions and They access the same data item and At least one of the operations is a write() Serial and Serialisable A schedule is serial if ‚Üì For each transaction T in the schedule, all operations in T are executed consecutively (no interleaving) A schedule S of n transactions is serialisable if ‚Üì It is equivalent to some serial schedule of the same n transactions Schedule Equivalence Two schedules are result equivalent if they produce the same final state on the database Two schedules are conflict equivalent if the order of any two conflicting operations is the same in both schedules Non-Serial and Non-Serialisable Schedule Non-Serial but Serialisable Schedule Locking Locks are used to synchronise access by concurrent transactions to a database Modes Shared‚ÜíFor reading #Db Exclusive‚ÜíFor writing #Db Lock Operations lock-shared(X)‚ÜîAttempt to acquire a shared lock on X lock-exclusive(X)‚ÜîAttempt to acquire an exclusive lock on X unlock(X)‚ÜîRelinquish all locks on X Lock Outcome #Db ‚Üì The result of an attempt to obtain a lock is either ‚Üì Grant lock (able to access the item) Wait for lock to be granted (not yet able to access item) Abort Locking Rules Must issue **lock-shared(X)**}} or {{lock-exclusive(X) before a read(X) operation Must issue lock-exclusive(X) before a write(X) operation Must issue unlock(X) after all **read(X)**}} and {{write(X) operations are completed Cannot issue lock-shared(X) if already holding a lock on }}{{X Cannot issue lock-exclusive(X) if already holding a lock on }}{{X Cannot issue unlock(X) unless holding a lock on }}{{X Lock Conversion Rules may be relaxed in order to allow lock conversion A lock-shared(X) may be upgraded to a }}{{lock-exclusive(X) A lock-exclusive(X) may be downgraded to a }}{{lock-shared(X) Locking, by itself, isn&amp;rsquo;t enough for non-serial schedules Two-Phase Locking (2PL) Extra rules for handling locks ‚Üì All locking operations precede the first unlock operation in a transaction Locks are only released after a transaction commits or aborts Two Phases Guarantees serializable transactions Growing Phase #Db ‚Üì Obtain locks Access data items Shrinking Phase #Db ‚Üì Release locks Deadlock #Db ‚Üì When two or more transactions are waiting for each other to release a lock on an item Conditions for deadlock to occur ‚Üì Concurrency‚ÜíTwo processes claim exclusive control of one resource Hold‚ÜíOne process continues to hold exclusively controlled resources until its need is satisfied Wait‚ÜíProcesses wait in queues for additional resources while holding resources already allocated Mutual dependency Dealing with Deadlock Deadlock Prevention ‚Üì Every transaction locks all items it needs in advance, if an item cannot be obtained , no items are locked Transactions updating the same resources are not allowed to execute concurrently Deadlock Detection Wait-for graph Representation of interactions between transactions #Db Directed graph containing ‚Üì A vertex for each transaction that is currently executing An edge from T1 to T2 if T1 is waiting to lock an item that is currently locked by T2 Deadlock exists iff the Wait-For Graph contains a cycle #Db Timeouts ‚Üì If a transaction waits for a resource for longer than a given period (the timeout), the system assumes that the transaction is deadlocked and aborts it Granularity and Concurrency Coarser granularity gives lower degree of concurrency Finer granularity gives higher overhead Timestamps ‚Üì Alternative to locks Timestamps are unique identifiers for transactions TS(T)‚ÜíTransaction start time Each resource X has ‚Üì A read timestamp ([read-TS(X)](Advanced Databases/Week 6/Transactions and Concurrency/Timestamps/Each resource X has/A read timestamp (read-TS(X))/read-TS(X).</description></item><item><title>Week 7</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-7/</guid><description>Languages, Problems and Complexity in Databases Boolean Queries Query evaluation reduces to BQE \pi_\emptyset(E)={&amp;lt;&amp;gt;} if true True of False queries \pi_\emptyset(E)=\emptyset if false Queries are usually large BQE focuses on the hardness of the query irrespective of the query size Computational Complexity Classes Groups decidable problems Each computational complexity class consists of all problems that can be solved in a computational model under certain restrictions on the resources used to solve the problem Examples of computational models Turing Machine TM (deterministic Turing Machine) Non-deterministic Turing Machine NTM Examples of resources Amount of space (memory) needed to solve the problem Amount of time needed to solve the problem Basic Computational Complexity Classes Logspace (L)‚ÜîAll decision problems solvable by a TM using extra memory bounded by a logarithmic amount in the input size NLogspace (NL)‚ÜîAll decision problems solvable by a NTM using extra memory bounded by a logarithmic amount in the input size P (PTime)‚ÜîAll decision problems solvable by a TM in time bounded by some polynomial in the input size NP‚ÜîAll decision problems solvable by a NTM in time bounded by some polynomial in the input size PSpace‚ÜîAll decision problems solvable by a TM using memory bounded by a polynomial in the input size Complexity It is known that LOGSPACE}} \subset {{PSPACE LOGSPACE }}\subseteq {{NLOGSPACE }}{{\subseteq}}{{ P }}\subseteq {{NP}} \subseteq {{PSPACE Problems in Databases Theorem QOT(RA) \equiv _LBQE(RA) \equiv _L means logspace-equivalent BQE(L) Input A database D A boolean query Q in L Question‚ÜíQ(D)\neq \emptyset (i.</description></item><item><title>Week 8</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-8/</guid><description>Parallel Databases I/O Bottleneck Access time to secondary storage (hard disks) dominates performance of DBMSes Parallel Databases‚ÜîIncrease I/O bandwidth by spreading data across a number of disks Have the ability to split processing of data and access to data across multiple processors}} and {{multiple disks Parallel Architectures Monolithic Architecture ‚Üì Single Processor (P) Tasks may be interleaved Not true parallelism Single bank of memory (M) Used by transactions Buffer pool for staging data to/from disc Single disc Shared Memory Architecture ‚Üì Tightly coupled Symmetric Multiprocessor (SMP) Software Less complex database software Limited scalability Single buffer Single database storage Shared Disc Architecture ‚Üì Loosely coupled Distributed memory S=Switch Software Avoids memory bottleneck Same page may be in more than one buffer at once - can lead to incoherence Needs global locking mechanism Single logical database storage Each processor has its own database buffer Shared Nothing Architecture ‚Üì Massively parallel Loosely coupled High speed interconnect (between processors) Software Each processor owns part of the data Each processor has its own database buffer One page is only in one local buffer}} - no {{buffer incoherence Needs ‚Üì Distributed deadlock detection Multiphase commit protocol To break SQL requests into multiple sub-requests Challenges ‚Üì Partitioning the data Keeping the partitioned data balanced Splitting up queries to get the work done Concurrency control and avoiding distributed deadlock Dealing with node failure Parallel Query Processing ‚Üì Dividing up the work Inter-Query Parallelism ‚Üì Different queries/transactions execute on different processors Improves throughput Intra-Query Parallelism Intra-Operator (Horizontal) Parallelism ‚Üì Operators decomposed into different operator instances, which perform the same operation on different subsets of data Inter-Operator (Vertical) Parallelism ‚Üì Operations are overlapped Pipeline data from one stage to the next without materialisation Bushy (Independent) Parallelism ‚Üì Subtrees in query plan are executed concurrently Intra-Operator Parallelism Partitioning ‚Üì Decomposition of operators relies on data being partitioned across the servers that comprise the parallel database Partitions should aim to spread I/O load evenly across servers Range Partitioning ‚Üì Hash Partitioning ‚Üì Schema Partitioning ‚Üì Rebalancing Data ‚Üì Example Query: SELECT c1, c2 FROM t WHERE c1&amp;gt;5.</description></item><item><title>Week 9</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Databases/Week-9/</guid><description>Information Retrieval Term Selection Techniques #Db ‚Üì Tokenisation #Db ‚Üì Identify distinct words e.g. Separate on whitespace, discard punctuation, fold cas Stop Word Removal Identify high frequency stop words Sort terms by collection frequency Use stop list to discard words during indexing Construct a stop list Noun Grouping Identify groups of adjacent nouns to index as terms Stemming and when generating query terms from query Use stemming algorithm to remove affixes from terms before indexing Manual Indexing Identification of indexing terms by a subject expert Vector Model Binary Vector Model 1 or 0 if term is present in document Vector Model Similarity Determined using the dot product Term Weighting Inverse Document Frequency \log_2\frac{\text{total number of documents in collection}}{\text{number of documents that contain the word that we&amp;rsquo;re interested in}} Term Frequency \frac{\text{number of occurrences of word in document}}{\text{total number of words in document}} Term Weighting TF * IDF Rocchio Method #Db ‚Üì Query refinement through relevance feedback Ask user to tag relevant/non-relevant Push towards relevant vectors, away from no-relevant \text{newquery}=(1query)+(0.</description></item><item><title>Wireless Sensor Networks</title><link>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-4/Wireless-Sensor-Networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Advanced-Computer-Networks/Week-4/Wireless-Sensor-Networks/</guid><description>Wireless Sensor Networks Autonomous networks of low-power wireless sensors Examples Berkeley &amp;amp; Intel bird nest monitoring ![[notes/Advanced Computer Networks/Images/Pasted image 20220818192228.</description></item><item><title>Worksheet 1</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Worksheets/Worksheet-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Worksheets/Worksheet-1/</guid><description>(a) $$U_A(o)=0.9\cdot o_1 + 0.1\cdot o_2$$ $$U_B(o)=0.6\cdot (1-o_1) + 0.4\cdot (1-o_2)$$</description></item><item><title>{{title}}</title><link>https://ik1g19.github.io/UoS-Notes/notes/templates/post/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/templates/post/</guid><description/></item><item><title>üìå‚Çà.‚ÇÅ</title><link>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-8/Notes/Pins/./</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ik1g19.github.io/UoS-Notes/notes/Intelligent-Agents/Week-8/Notes/Pins/./</guid><description>Nothing of value is learned until the winner is announced</description></item></channel></rss>